{"remainingRequest":"/Users/cnmingenuity/Desktop/bee-app/node_modules/babel-loader/lib/index.js!/Users/cnmingenuity/Desktop/bee-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/cnmingenuity/Desktop/bee-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cnmingenuity/Desktop/bee-app/src/views/JobBoard.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cnmingenuity/Desktop/bee-app/src/views/JobBoard.vue","mtime":1616207273446},{"path":"/Users/cnmingenuity/Desktop/bee-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cnmingenuity/Desktop/bee-app/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/cnmingenuity/Desktop/bee-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cnmingenuity/Desktop/bee-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9jbm1pbmdlbnVpdHkvRGVza3RvcC9iZWUtYXBwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL1VzZXJzL2NubWluZ2VudWl0eS9EZXNrdG9wL2JlZS1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgeyBjb21tZW50c0NvbGxlY3Rpb24gfSBmcm9tICdAL2ZpcmViYXNlJzsKaW1wb3J0IHsgbWFwU3RhdGUgfSBmcm9tICd2dWV4JzsKaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnOwppbXBvcnQgQ29tbWVudE1vZGFsIGZyb20gJ0AvY29tcG9uZW50cy9Db21tZW50TW9kYWwnOwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgQ29tbWVudE1vZGFsOiBDb21tZW50TW9kYWwKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICAvL3VwZGF0ZSBkYXRhIG9iamVjdCB0byBhbGxvdyB1c2VycyB0byBwb3N0IGNvbnRlbnQKICAgICAgcG9zdDogewogICAgICAgIGNvbnRlbnQ6ICcnCiAgICAgIH0sCiAgICAgIHNob3dDb21tZW50TW9kYWw6IGZhbHNlLAogICAgICBzZWxlY3RlZFBvc3Q6IHt9LAogICAgICBzaG93UG9zdE1vZGFsOiBmYWxzZSwKICAgICAgZnVsbFBvc3Q6IHt9LAogICAgICBwb3N0Q29tbWVudHM6IFtdCiAgICB9OwogIH0sCiAgLy9Vc2UgbWFwU3RhdGUgdG8gcHVsbCB1c2VyUHJvZmlsZSBhbmQgcG9zdHMgb2JqZWN0cyBpbnRvIGRhc2hib2FyZCBjb21wb25lbnQKICBjb21wdXRlZDogX29iamVjdFNwcmVhZCh7fSwgbWFwU3RhdGUoWyd1c2VyUHJvZmlsZScsICdwb3N0cyddKSksCiAgbWV0aG9kczogewogICAgLy9NYWtlIHRoZSBtZXRob2QgZm9yIHVzZXJzIHRvIHBvc3QgaW4gdGhlIGJvYXJkCiAgICBjcmVhdGVQb3N0OiBmdW5jdGlvbiBjcmVhdGVQb3N0KCkgewogICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnY3JlYXRlUG9zdCcsIHsKICAgICAgICBjb250ZW50OiB0aGlzLnBvc3QuY29udGVudAogICAgICB9KTsKICAgICAgdGhpcy5wb3N0LmNvbnRlbnQgPSAnJzsKICAgIH0sCiAgICAvL01ha2UgbWV0aG9kIHRvIHNob3cvaGlkZSBtb2RhbAogICAgdG9nZ2xlQ29tbWVudE1vZGFsOiBmdW5jdGlvbiB0b2dnbGVDb21tZW50TW9kYWwocG9zdCkgewogICAgICB0aGlzLnNob3dDb21tZW50TW9kYWwgPSAhdGhpcy5zaG93Q29tbWVudE1vZGFsOyAvLyBpZiBvcGVuaW5nIG1vZGFsIHNldCBzZWxlY3RlZFBvc3QsIGVsc2UgY2xlYXIKCiAgICAgIGlmICh0aGlzLnNob3dDb21tZW50TW9kYWwpIHsKICAgICAgICB0aGlzLnNlbGVjdGVkUG9zdCA9IHBvc3Q7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5zZWxlY3RlZFBvc3QgPSB7fTsKICAgICAgfQogICAgfSwKICAgIC8vY291bnQgaG93IG1hbnkgbGlrZXMgYSBwb3N0IHJlY2lldmVzCiAgICBsaWtlUG9zdDogZnVuY3Rpb24gbGlrZVBvc3QoaWQsIGxpa2VzQ291bnQpIHsKICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2xpa2VQb3N0JywgewogICAgICAgIGlkOiBpZCwKICAgICAgICBsaWtlc0NvdW50OiBsaWtlc0NvdW50CiAgICAgIH0pOwogICAgfSwKICAgIC8vY3JlYXRlIHZpZXdQb3N0IGFuZCBjbG9zZVBvc3QgdG9nZ2xlIG1ldGhvZHMKICAgIHZpZXdQb3N0OiBmdW5jdGlvbiB2aWV3UG9zdChwb3N0KSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciBkb2NzOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIGNvbW1lbnRzQ29sbGVjdGlvbi53aGVyZSgncG9zdElkJywgJz09JywgcG9zdC5pZCkuZ2V0KCk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgIGRvY3MgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgZG9jcy5mb3JFYWNoKGZ1bmN0aW9uIChkb2MpIHsKICAgICAgICAgICAgICAgICAgdmFyIGNvbW1lbnQgPSBkb2MuZGF0YSgpOwogICAgICAgICAgICAgICAgICBjb21tZW50LmlkID0gZG9jLmlkOwoKICAgICAgICAgICAgICAgICAgX3RoaXMucG9zdENvbW1lbnRzLnB1c2goY29tbWVudCk7CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIF90aGlzLmZ1bGxQb3N0ID0gcG9zdDsKICAgICAgICAgICAgICAgIF90aGlzLnNob3dQb3N0TW9kYWwgPSB0cnVlOwoKICAgICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgY2xvc2VQb3N0TW9kYWw6IGZ1bmN0aW9uIGNsb3NlUG9zdE1vZGFsKCkgewogICAgICB0aGlzLnBvc3RDb21tZW50cyA9IFtdOwogICAgICB0aGlzLnNob3dQb3N0TW9kYWwgPSBmYWxzZTsKICAgIH0KICB9LAogIC8vQXBwbHkgZmlsdGVycyB0byBmb3JtYXQgdGhlIGRhdGUgYW5kIHRyaW0gdGhlIHBvc3RpbmcgbGVuZ3RoCiAgZmlsdGVyczogewogICAgZm9ybWF0RGF0ZTogZnVuY3Rpb24gZm9ybWF0RGF0ZSh2YWwpIHsKICAgICAgaWYgKCF2YWwpIHsKICAgICAgICByZXR1cm4gJy0nOwogICAgICB9CgogICAgICB2YXIgZGF0ZSA9IHZhbC50b0RhdGUoKTsKICAgICAgcmV0dXJuIG1vbWVudChkYXRlKS5mcm9tTm93KCk7CiAgICB9LAogICAgdHJpbUxlbmd0aDogZnVuY3Rpb24gdHJpbUxlbmd0aCh2YWwpIHsKICAgICAgaWYgKHZhbC5sZW5ndGggPCAyMDApIHsKICAgICAgICByZXR1cm4gdmFsOwogICAgICB9CgogICAgICByZXR1cm4gIiIuY29uY2F0KHZhbC5zdWJzdHJpbmcoMCwgMjAwKSwgIi4uLiIpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["JobBoard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgFA,SAAA,kBAAA,QAAA,YAAA;AACA,SAAA,QAAA,QAAA,MAAA;AACA,OAAA,MAAA,MAAA,QAAA;AACA,OAAA,YAAA,MAAA,2BAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,YAAA,EAAA;AADA,GADA;AAIA,EAAA,IAJA,kBAIA;AACA,WAAA;AACA;AACA,MAAA,IAAA,EAAA;AACA,QAAA,OAAA,EAAA;AADA,OAFA;AAKA,MAAA,gBAAA,EAAA,KALA;AAMA,MAAA,YAAA,EAAA,EANA;AAOA,MAAA,aAAA,EAAA,KAPA;AAQA,MAAA,QAAA,EAAA,EARA;AASA,MAAA,YAAA,EAAA;AATA,KAAA;AAWA,GAhBA;AAiBA;AACA,EAAA,QAAA,oBACA,QAAA,CAAA,CAAA,aAAA,EAAA,OAAA,CAAA,CADA,CAlBA;AAqBA,EAAA,OAAA,EAAA;AACA;AACA,IAAA,UAFA,wBAEA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,YAAA,EAAA;AAAA,QAAA,OAAA,EAAA,KAAA,IAAA,CAAA;AAAA,OAAA;AACA,WAAA,IAAA,CAAA,OAAA,GAAA,EAAA;AACA,KALA;AAMA;AACA,IAAA,kBAPA,8BAOA,IAPA,EAOA;AACA,WAAA,gBAAA,GAAA,CAAA,KAAA,gBAAA,CADA,CAGA;;AACA,UAAA,KAAA,gBAAA,EAAA;AACA,aAAA,YAAA,GAAA,IAAA;AACA,OAFA,MAEA;AACA,aAAA,YAAA,GAAA,EAAA;AACA;AACA,KAhBA;AAiBA;AACA,IAAA,QAlBA,oBAkBA,EAlBA,EAkBA,UAlBA,EAkBA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,UAAA,EAAA;AAAA,QAAA,EAAA,EAAA,EAAA;AAAA,QAAA,UAAA,EAAA;AAAA,OAAA;AACA,KApBA;AAqBA;AACA,IAAA,QAtBA,oBAsBA,IAtBA,EAsBA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA,kBAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EAAA,IAAA,CAAA,EAAA,EAAA,GAAA,EADA;;AAAA;AACA,gBAAA,IADA;AAGA,gBAAA,IAAA,CAAA,OAAA,CAAA,UAAA,GAAA,EAAA;AACA,sBAAA,OAAA,GAAA,GAAA,CAAA,IAAA,EAAA;AACA,kBAAA,OAAA,CAAA,EAAA,GAAA,GAAA,CAAA,EAAA;;AACA,kBAAA,KAAA,CAAA,YAAA,CAAA,IAAA,CAAA,OAAA;AACA,iBAJA;AAMA,gBAAA,KAAA,CAAA,QAAA,GAAA,IAAA;AACA,gBAAA,KAAA,CAAA,aAAA,GAAA,IAAA;;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA,KAjCA;AAkCA,IAAA,cAlCA,4BAkCA;AACA,WAAA,YAAA,GAAA,EAAA;AACA,WAAA,aAAA,GAAA,KAAA;AACA;AArCA,GArBA;AA4DA;AACA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,sBACA,GADA,EACA;AACA,UAAA,CAAA,GAAA,EAAA;AAAA,eAAA,GAAA;AAAA;;AAEA,UAAA,IAAA,GAAA,GAAA,CAAA,MAAA,EAAA;AACA,aAAA,MAAA,CAAA,IAAA,CAAA,CAAA,OAAA,EAAA;AACA,KANA;AAOA,IAAA,UAPA,sBAOA,GAPA,EAOA;AACA,UAAA,GAAA,CAAA,MAAA,GAAA,GAAA,EAAA;AAAA,eAAA,GAAA;AAAA;;AACA,uBAAA,GAAA,CAAA,SAAA,CAAA,CAAA,EAAA,GAAA,CAAA;AACA;AAVA;AA7DA,CAAA","sourcesContent":["<template>\n    <!-- Job Board View-->\n  <div id=\"JobBoard\">\n    <!--Use a transition fade for the show or hide animation of the comment modal -->\n    <transition name=\"fade\">\n      <CommentModal v-if=\"showCommentModal\" :post=\"selectedPost\" @close=\"toggleCommentModal()\"></CommentModal>\n    </transition>\n    <section>\n      <div class=\"col1\">\n        <div class=\"profile\">\n          <h5>{{ userProfile.name }}</h5>\n          <p>{{ userProfile.title }}</p>\n              <!-- Add the create post method on the submit button-->\n          <div class=\"create-post\">\n            <p>create a post</p>\n            <form @submit.prevent>\n              <textarea v-model.trim=\"post.content\"></textarea>\n                  <!-- Disable the button until the user has entered content-->\n              <button @click=\"createPost()\" :disabled=\"post.content === ''\" class=\"button\">post</button>\n            </form>\n          </div>\n        </div>\n      </div>\n      <div class=\"col2\">\n        <div v-if=\"posts.length\">\n          <!--Display the posts using v-for -->\n          <div v-for=\"post in posts\" :key=\"post.id\" class=\"post\">\n            <!--Display username for posts -->\n            <h5>{{ post.userName }}</h5>\n            <!--Include and format date post was created-->\n            <span>{{ post.createdOn | formatDate }}</span>\n            <!--Display content of the post and format the length -->\n            <p>{{ post.content | trimLength }}</p>\n            <ul>\n              <!--Allow for users to interact with eachother through comments, likes, and viewing the full post. Add click event to show/hide modal -->\n              <li><a @click=\"toggleCommentModal(post)\">comments {{ post.comments }}</a></li>\n              <li><a @click=\"likePost(post.id, post.likes)\">likes {{ post.likes }}</a></li>\n              <li><a @click=\"viewPost(post)\">view full post</a></li>\n            </ul>\n          </div>\n        </div>\n        <div v-else>\n          <p class=\"no-results\">There are currently no posts</p>\n        </div>\n      </div>\n    </section>\n\n    <!-- full post modal -->\n    <transition name=\"fade\">\n      <div v-if=\"showPostModal\" class=\"p-modal\">\n        <div class=\"p-container\">\n          <a @click=\"closePostModal()\" class=\"close\">close</a>\n          <div class=\"post\">\n            <!--Display post username, date created on, and full content -->\n            <h5>{{ fullPost.userName }}</h5>\n            <span>{{ fullPost.createdOn | formatDate }}</span>\n            <p>{{ fullPost.content }}</p>\n            <ul>\n              <li><a>comments {{ fullPost.comments }}</a></li>\n              <li><a>likes {{ fullPost.likes }}</a></li>\n            </ul>\n          </div>\n          <!--Display comments on the post with corresponding date and username -->\n          <div v-show=\"postComments.length\" class=\"comments\">\n            <div v-for=\"comment in postComments\" :key=\"comment.id\" class=\"comment\">\n              <p>{{ comment.userName }}</p>\n              <span>{{ comment.createdOn | formatDate }}</span>\n              <p>{{ comment.content }}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </transition>\n  </div>\n</template>\n\n<!-- We can expand the functionality of the Job Board by allowing users to upload files including an avatar, resume, survey or job summary. Creating a dashboard for users to see how many new messages or postings are available since their previous login is another feature to continue expanding on capabilities. -->\n\n    <!-- Give users ability to make posts -->\n<script>\nimport { commentsCollection } from '@/firebase'\nimport { mapState } from 'vuex'\nimport moment from 'moment'\nimport CommentModal from '@/components/CommentModal'\n\nexport default {\n  components: {\n    CommentModal\n  },\n  data() {\n    return {\n      //update data object to allow users to post content\n      post: {\n        content: ''\n      },\n      showCommentModal: false,\n      selectedPost: {},\n      showPostModal: false,\n      fullPost: {},\n      postComments: []\n    }\n  },\n  //Use mapState to pull userProfile and posts objects into dashboard component\n  computed: {\n    ...mapState(['userProfile', 'posts'])\n  },\n  methods: {\n  //Make the method for users to post in the board\n    createPost() {\n      this.$store.dispatch('createPost', { content: this.post.content })\n      this.post.content = ''\n    },\n    //Make method to show/hide modal\n    toggleCommentModal(post) {\n      this.showCommentModal = !this.showCommentModal\n\n      // if opening modal set selectedPost, else clear\n      if (this.showCommentModal) {\n        this.selectedPost = post\n      } else {\n        this.selectedPost = {}\n      }\n    },\n    //count how many likes a post recieves\n    likePost(id, likesCount) {\n      this.$store.dispatch('likePost', { id, likesCount })\n    },\n    //create viewPost and closePost toggle methods\n    async viewPost(post) {\n      const docs = await commentsCollection.where('postId', '==', post.id).get()\n\n      docs.forEach(doc => {\n        let comment = doc.data()\n        comment.id = doc.id\n        this.postComments.push(comment)\n      })\n\n      this.fullPost = post\n      this.showPostModal = true\n    },\n    closePostModal() {\n      this.postComments = []\n      this.showPostModal = false\n    }\n  },\n  //Apply filters to format the date and trim the posting length\n  filters: {\n    formatDate(val) {\n      if (!val) { return '-' }\n\n      let date = val.toDate()\n      return moment(date).fromNow()\n    },\n    trimLength(val) {\n      if (val.length < 200) { return val }\n      return `${val.substring(0, 200)}...`\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>\n\n"],"sourceRoot":"src/views"}]}